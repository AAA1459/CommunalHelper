# -- Entity and Trigger Tooltips --
#    placements.entities.entityName.tooltips.attr=Tooltip
#    placements.triggers.triggerName.tooltips.attr=Tooltip



# -- Entities --

# -- Attached Wall Booster --
placements.entities.CommunalHelper/AttachedWallBooster.tooltips.left=Whether the Wall Booster should attach to the left sides of solids.
placements.entities.CommunalHelper/AttachedWallBooster.tooltips.notCoreMode=Whether the Wall Booster should ignore the current Core Mode and be in Ice Mode.


# -- Cassette Falling Block --
placements.entities.CommunalHelper/CassetteFallingBlock.tooltips.index=The color of the Cassette Falling Block.
placements.entities.CommunalHelper/CassetteFallingBlock.tooltips.tempo=The tempo of the cassette music in the room.

# -- Cassette Move Block --
placements.entities.CommunalHelper/CassetteMoveBlock.tooltips.direction=The direction in which the Cassette Move Block moves.
placements.entities.CommunalHelper/CassetteMoveBlock.tooltips.moveSpeed=The speed at which the block moves (accepts any number).
placements.entities.CommunalHelper/CassetteMoveBlock.tooltips.index=The color of the Cassette Move Block.
placements.entities.CommunalHelper/CassetteMoveBlock.tooltips.tempo=The tempo of the cassette music in the room.

# -- Cassette Swap Block --
placements.entities.CommunalHelper/CassetteSwapBlock.tooltips.noReturn=Whether Cassette Swap Block should return to its starting point or not.
placements.entities.CommunalHelper/CassetteSwapBlock.tooltips.index=The color of the Cassette Swap Block.
placements.entities.CommunalHelper/CassetteSwapBlock.tooltips.tempo=The tempo of the cassette music in the room.

# -- Cassette Zip Mover --
placements.entities.CommunalHelper/CassetteZipMover.tooltips.index=The color of the Cassette Zip Mover.
placements.entities.CommunalHelper/CassetteZipMover.tooltips.tempo=The tempo of the cassette music in the room.
placements.entities.CommunalHelper/CassetteZipMover.tooltips.noReturn=Whether the Cassette Zip Mover should return to its starting point or not.
placements.entities.CommunalHelper/CassetteZipMover.tooltips.permanent=Whether this block should lock in place after being triggered.
placements.entities.CommunalHelper/CassetteZipMover.tooltips.waitforplayer=Whether this block requires the player to trigger it each node in the path.
placements.entities.CommunalHelper/CassetteZipMover.tooltips.ticking=Causes this block to tick 5 times at every node before going back to its starting point, unless the player triggers it again. If `permanent` is true and the player doesn't trigger the Zip Mover in time, it'll lock in place.


# -- Connected Dream Block --
placements.entities.CommunalHelper/ConnectedDreamBlock.tooltips.below=Determines whether the Connected Dream Block should render in the background or foreground.
placements.entities.CommunalHelper/ConnectedDreamBlock.tooltips.featherMode=Whether the Connected Dream Block has the Dream Block Feather controls enabled. Connected Dream Blocks only connect with other dream blocks with the same controls.
placements.entities.CommunalHelper/ConnectedDreamBlock.tooltips.oneUse=Whether THIS Connected Dream Block should make its entire group shatter upon leaving it.
placements.entities.CommunalHelper/ConnectedDreamBlock.tooltips.refillCount=Number of dashes this group of Connected Dream Blocks should refill (-1 for default).

# -- Connected Move Block --
placements.entities.CommunalHelper/ConnectedMoveBlock.tooltips.moveSpeed=The speed at which the block moves (accepts any number).
placements.entities.CommunalHelper/ConnectedMoveBlock.tooltips.direction=The direction in which the Connected Move Block should travel.

# -- Connected Swap Block --
placements.entities.CommunalHelper/ConnectedSwapBlock.tooltips.theme=The appearance of the Connected Swap Block.

# -- Connected Zip Mover --
placements.entities.CommunalHelper/ConnectedZipMover.tooltips.theme=The appearance of the Connected Zip Mover. The Cliffside theme is a custom theme.
placements.entities.CommunalHelper/ConnectedZipMover.tooltips.permanent=Whether the Connected Zip Mover should stay completely static after stopping.
placements.entities.CommunalHelper/ConnectedZipMover.tooltips.waiting=Whether the Connected Zip Mover should wait for the player at each node. Only useful if has more than one node.
placements.entities.CommunalHelper/ConnectedZipMover.tooltips.ticking=Whether the Connected Zip Mover should be ticking at each node, forcing the player to reactivate it within a limited amount of time. Will return to initial position if the player doesn't reactivate it, or locks in place completely if "permanent" is on. Only useful if has more than one node.


# -- Dream Falling Block --
placements.entities.CommunalHelper/DreamFallingBlock.tooltips.featherMode=Whether the Dream Falling Block has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamFallingBlock.tooltips.oneUse=Whether the Dream Falling Block should shatter upon exit.
placements.entities.CommunalHelper/DreamFallingBlock.tooltips.refillCount=Number of dashes the Dream Falling Block should refill (-1 for default).
placements.entities.CommunalHelper/DreamFallingBlock.tooltips.below=Determines whether the Dream Falling Block should render in the background or foreground.
placements.entities.CommunalHelper/DreamFallingBlock.tooltips.noCollide=Whether the Dream Falling Block should go through everything.

# -- Dream Move Block --
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.below=Determines whether the Dream Move Block should render in the background or foreground.
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.direction=The direction in which the Dream Move Block moves.
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.refillCount=Number of dashes the Dream Move Block should refill (-1 for default).
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.moveSpeed=The speed at which the Dream Move Block moves (accepts any number).
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.noCollide=Whether the Dream Move Block should go through everything.
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.featherMode=Whether the Dream Move Block has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamMoveBlock.tooltips.oneUse=Whether the Dream Move Block should shatter upon exit.

# -- Dream Refill --
placements.entities.CommunalHelper/DreamRefill.tooltips.oneUse=Whether the Dream Refill should be only used once.

# -- Dream Swap Block --
placements.entities.CommunalHelper/DreamSwapBlock.tooltips.below=Determines whether the Dream Move Block should render in the background or foreground.
placements.entities.CommunalHelper/DreamSwapBlock.tooltips.noReturn=Whether the Dream Swap Block should return to its starting point or not.
placements.entities.CommunalHelper/DreamSwapBlock.tooltips.featherMode=Whether the Dream Swap Block has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamSwapBlock.tooltips.oneUse=Whether the Dream Swap Block should shatter upon exit.
placements.entities.CommunalHelper/DreamSwapBlock.tooltips.refillCount=Number of dashes the Dream Swap Block should refill (-1 for default).

# -- Dream Switch Gate --
placements.entities.CommunalHelper/DreamSwitchGate.tooltips.below=Determines whether the Dream Move Block should render in the background or foreground.
placements.entities.CommunalHelper/DreamSwitchGate.tooltips.featherMode=Whether the Dream Switch Gate has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamSwitchGate.tooltips.oneUse=Whether the Dream Switch Gate should shatter upon exit.
placements.entities.CommunalHelper/DreamSwitchGate.tooltips.permanent=Whether the Dream Switch Gate should stay at its node permanently after being activated for the entire level.
placements.entities.CommunalHelper/DreamSwitchGate.tooltips.refillCount=Number of dashes the Dream Switch Block should refill (-1 for default).

# -- Dream Zip Mover --
placements.entities.CommunalHelper/DreamZipMover.tooltips.below=Determines whether the Dream Move Block should render in the background or foreground.
placements.entities.CommunalHelper/DreamZipMover.tooltips.noReturn=Whether the Dream Zip Mover should return to its starting point or not.
placements.entities.CommunalHelper/DreamZipMover.tooltips.dreamAesthetic=Optional look for this entity, mostly unused, but left there.
placements.entities.CommunalHelper/DreamZipMover.tooltips.featherMode=Whether the Dream Zip Mover has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamZipMover.tooltips.oneUse=Whether the Dream Zip Mover should shatter upon exit.
placements.entities.CommunalHelper/DreamZipMover.tooltips.refillCount=Number of dashes the Dream Zip Block should refill (-1 for default).
placements.entities.CommunalHelper/DreamZipMover.tooltips.doubleRefill=Whether the Dream Zip Mover should refill two dashes, instead of one.
placements.entities.CommunalHelper/DreamZipMover.tooltips.permanent=Whether this block should lock in place after being triggered.
placements.entities.CommunalHelper/DreamZipMover.tooltips.waitforplayer=Whether this block requires the player to trigger it each node in the path.
placements.entities.CommunalHelper/DreamZipMover.tooltips.ticking=Causes this block to tick 5 times at every node before going back to its starting point, unless the player triggers it again. If `permanent` is true and the player doesn't trigger the Zip Mover in time, it'll lock in place.

# -- Dream Floaty Space Block --
placements.entities.CommunalHelper/DreamFloatySpaceBlock.tooltips.below=Determines whether this block should render in the background or foreground.
placements.entities.CommunalHelper/DreamFloatySpaceBlock.tooltips.refillCount=Number of dashes the Dream Floaty Space Block should refill (-1 for default).
placements.entities.CommunalHelper/DreamFloatySpaceBlock.tooltips.featherMode=Whether this block has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamFloatySpaceBlock.tooltips.oneUse=Whether this block should shatter upon exit.

# -- Dream Crumble Wall On Rumble --
placements.entities.CommunalHelper/DreamCrumbleWallOnRumble.tooltips.below=Determines whether this block should render in the background or foreground.
placements.entities.CommunalHelper/DreamCrumbleWallOnRumble.tooltips.refillCount=Number of dashes the Dream Floaty Space Block should refill (-1 for default).
placements.entities.CommunalHelper/DreamCrumbleWallOnRumble.tooltips.featherMode=Whether this block has the Dream Block Feather controls enabled.
placements.entities.CommunalHelper/DreamCrumbleWallOnRumble.tooltips.oneUse=Whether this block should shatter upon exit.
placements.entities.CommunalHelper/DreamCrumbleWallOnRumble.tooltips.persistent=Whether this block should remain broken permanently.


# -- Move Swap Block --
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.canSteer=Whether the Move Swap Block can be moved by the player.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.direction=The direction the Move Swap Block moves in upon activation.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.freezeOnSwap=Whether the block will continue moving while swapping.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.moveAcceleration=The speed at which the block will move upon activation.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.moveSpeed=The maximum speed of the block while moving.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.returns=Whether the block will return after swapping.
placements.entities.CommunalHelper/MoveSwapBlock.tooltips.swapSpeedMultiplier=The speed multiplier for swapping.


# -- Heart Gem Shards --
placements.entities.CommunalHelper/CrystalHeart.tooltips.removeCameraTriggers=Whether the heart should remove camera triggers onces its triggered.


# -- Move Block Redirect --
placements.entities.CommunalHelper/MoveBlockRedirect.tooltips.direction=Determines the direction the move block moves after being redirected.
placements.entities.CommunalHelper/MoveBlockRedirect.tooltips.fastRedirect=Skips the redirect animation.


# -- Shielded Refill --
placements.entities.CommunalHelper/ShieldedRefill.tooltips.twoDashes=Whether the refill should give two dashes, instead of one.
placements.entities.CommunalHelper/ShieldedRefill.tooltips.bubbleRepel=Whether the player should bounce off the bubble.
placements.entities.CommunalHelper/ShieldedRefill.tooltips.oneUse=Whether the refill should reappear after being collected.

# -- Reset State Crystal --
placements.entities.CommunalHelper/ResetStateCrystal.tooltips.oneUse=Whether the crystal should reappear after being collected.


# -- Solid Extension --


# -- Station Block --
placements.entities.CommunalHelper/StationBlock.tooltips.speedFactor=The factor by which the speed of the Station Block is multiplied. This value will be clamped from to 0.1 to 3.
placements.entities.CommunalHelper/StationBlock.tooltips.theme=Aspect theme of the Station Block.
placements.entities.CommunalHelper/StationBlock.tooltips.behavior=Behavior of the Station Block. Pulling will make it move towards you, and Pushing does the opposite. This changes slightly the appearance of the block, depending on the behavior.
placements.entities.CommunalHelper/StationBlock.tooltips.customBlockPath=This is the path you should specify if you're using a custom texture for the block, leave empty for default textures. It looks for Graphics/Atlases/Gameplay/objects/<path>. The block should be a 24x24 texture, that preferably gets tiled correctly. Example: "catapillie/customStationBlock/custom_block", where the texture is located at Graphics/Atlases/Gameplay/objects/catapillie/customStationBlock/custom_block.png. DON'T add the ".png".
placements.entities.CommunalHelper/StationBlock.tooltips.customArrowPath=This is the path you should specify if you're using custom textures for the arrow, leave empty for default textures. It looks for Graphics/Atlases/Gameplay/objects/<path>/small, med, or big. There should be 16 sprites for each size, so 48 in total, labeled like so: small00, small01, 02, 03, etc.. up to small15, and same goes for med and big. The first texture is the arrow pointing UP, the fifth pointing RIGHT, the ninth pointing DOWN, and the 13th pointing LEFT, the other sprites in between are the animation going from one direction to another. You can take a look at how Communal Helper has them setup. Example: "catapillie/customStationBlock/arrow", where the arrow textures are located at Graphics/Atlases/Gameplay/objects/catapillie/customStationBlock/arrow/small00, small01... small15, same for med(00 - 15) & big(00 - 15). This should point to a directory, not an image.
placements.entities.CommunalHelper/StationBlock.tooltips.customTrackPath=This is the path you should specify if you're using custom textures for the tracks, leave empty for default textures. It looks for Graphics/Atlases/Gameplay/objects/<path>/node.png, trackv.png and trackh.png. There should be 3 textures in the folder you specified in the path, all of size 8x8, called: node.png, trackv.png, and trackh.png. The node.png texture is the point of intersection between tracks. trackv.png and trackh.png are the track horizontal & vertical textures, they should loop over seamlessly. Example: "catapillie/customStationBlock/tracks", where the texture are located at Graphics/Atlases/Gameplay/objects/catapillie/customStationBlock/tracks/node.png, trackv.png and trackh.png. This should point to a directory, not an image.

# -- Station Block Track --
placements.entities.CommunalHelper/StationBlockTrack.tooltips.horizontal=Whether the track should be handled as a horizontal one.


# -- Summit Gem --
placements.entities.CommunalHelper/CustomSummitGem.tooltips.index=Determines the texture and sound used for this gem (clamped within 0 and 7). Must be unique within a room. To use a custom texture, put it at Graphics/Atlases/Gameplay/collectables/summitgems/$mapSID/$roomName/$index.

# -- Summit Gem Manager --
placements.entities.CommunalHelper/CustomSummitGemManager.tooltips.gemIds=Comma separated list of gemIDs. ID format is $mapSID/$roomName/$index. If no mapSID is provided, the current map will be used.
placements.entities.CommunalHelper/CustomSummitGemManager.tooltips.melody=NOT Comma separated list of numbers from 0-7 for a custom melody during collection. Defaults to the gem index if not provided.
placements.entities.CommunalHelper/CustomSummitGemManager.tooltips.heartOffset=Determines where the crystal heart will move to relative to this summit gem manager once all gems are collected.

# -- Synced Zip Mover Activation Controller --
placements.entities.CommunalHelper/SyncedZipMoverActivationController.tooltips.zipMoverSpeedMultiplier=Speed Multiplier for the controlled Zip Movers.
placements.entities.CommunalHelper/SyncedZipMoverActivationController.tooltips.colorCode=Target color code.


# -- Timed Trigger Spikes --
placements.entities.CommunalHelper/TimedTriggerSpikesUp.names.Grouped=Grouping
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.names.Grouped=Grouping
placements.entities.CommunalHelper/TimedTriggerSpikesDown.names.Grouped=Grouping
placements.entities.CommunalHelper/TimedTriggerSpikesRight.names.Grouped=Grouping
placements.entities.CommunalHelper/TimedTriggerSpikesUp.names.type=Texture
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.names.type=Texture
placements.entities.CommunalHelper/TimedTriggerSpikesDown.names.type=Texture
placements.entities.CommunalHelper/TimedTriggerSpikesRight.names.type=Texture
placements.entities.CommunalHelper/TimedTriggerSpikesUp.tooltips.Delay=The delay, in seconds, before the spikes come up, after triggering.\nSpikes take 0.0667 seconds to come up (4 frames).
placements.entities.CommunalHelper/TimedTriggerSpikesUp.tooltips.WaitForPlayer=Setting this to true will make the spike only come up after the player\nleaves the spike area. Useful for when you need to return to a space in a time limit.
placements.entities.CommunalHelper/TimedTriggerSpikesUp.tooltips.Grouped=Setting this to "Grouped" will trigger all spikes in the line if any spike in\nthe line is triggered. "Grouped" requires Max's Helping Hand to work, and will throw an\nerror in its absence.
placements.entities.CommunalHelper/TimedTriggerSpikesUp.tooltips.type=The texture that the trigger spikes will use. Can be customized the same way as a\nnormal spike, but cannot be animated.
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.tooltips.Delay=The delay, in seconds, before the spikes come up, after triggering.\nSpikes take 0.0667 seconds to come up (4 frames).
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.tooltips.WaitForPlayer=Setting this to true will make the spike only come up after the player\nleaves the spike area. Useful for when you need to return to a space in a time limit.
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.tooltips.Grouped=Setting this to "Grouped" will trigger all spikes in the line if any spike in\nthe line is triggered. "Grouped" requires Max's Helping Hand to work, and will throw an\nerror in its absence.
placements.entities.CommunalHelper/TimedTriggerSpikesLeft.tooltips.type=The texture that the trigger spikes will use. Can be customized the same way as a\nnormal spike, but cannot be animated.
placements.entities.CommunalHelper/TimedTriggerSpikesDown.tooltips.Delay=The delay, in seconds, before the spikes come up, after triggering.\nSpikes take 0.0667 seconds to come up (4 frames).
placements.entities.CommunalHelper/TimedTriggerSpikesDown.tooltips.WaitForPlayer=Setting this to true will make the spike only come up after the player\nleaves the spike area. Useful for when you need to return to a space in a time limit.
placements.entities.CommunalHelper/TimedTriggerSpikesDown.tooltips.Grouped=Setting this to "Grouped" will trigger all spikes in the line if any spike in\nthe line is triggered. "Grouped" requires Max's Helping Hand to work, and will throw an\nerror in its absence.
placements.entities.CommunalHelper/TimedTriggerSpikesDown.tooltips.type=The texture that the trigger spikes will use. Can be customized the same way as a\nnormal spike, but cannot be animated.
placements.entities.CommunalHelper/TimedTriggerSpikesRight.tooltips.Delay=The delay, in seconds, before the spikes come up, after triggering.\nSpikes take 0.0667 seconds to come up (4 frames).
placements.entities.CommunalHelper/TimedTriggerSpikesRight.tooltips.WaitForPlayer=Setting this to true will make the spike only come up after the player\nleaves the spike area. Useful for when you need to return to a space in a time limit.
placements.entities.CommunalHelper/TimedTriggerSpikesRight.tooltips.Grouped=Setting this to "Grouped" will trigger all spikes in the line if any spike in\nthe line is triggered. "Grouped" requires Max's Helping Hand to work, and will throw an\nerror in its absence.
placements.entities.CommunalHelper/TimedTriggerSpikesRight.tooltips.type=The texture that the trigger spikes will use. Can be customized the same way as a\nnormal spike, but cannot be animated.
